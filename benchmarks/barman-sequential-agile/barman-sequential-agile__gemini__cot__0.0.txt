Step 1: Analyze the domain.
The domain describes actions related to preparing cocktails.  Actions involving shots are generally prerequisites for actions involving shakers, which are then prerequisites for final pouring. Static predicates will be moved to the top of the predicate list. Add effects will be placed before delete effects within each action.  Preconditions will be reordered to prioritize object states and availability.  Actions will be reordered to reflect a typical cocktail-making flow: shot manipulation, then shaker manipulation, then final actions.

Step 2: Apply your strategy and output the fully reordered domain.
(define (domain barman)
  (:requirements :strips :typing)
  (:types hand level beverage dispenser container - object
  	  ingredient cocktail - beverage
          shot shaker - container)
  (:predicates 
                (dispenses ?d - dispenser ?i - ingredient)
		(next ?l1 ?l2 - level)
                (cocktail-part1 ?c - cocktail ?i - ingredient)
                (cocktail-part2 ?c - cocktail ?i - ingredient)
		(handempty ?h - hand)
                (ontable ?c - container)
                (holding ?h - hand ?c - container)
		(clean ?c - container)
                (empty ?c - container)
                (contains ?c - container ?b - beverage)
                (used ?c - container ?b - beverage)
		(shaker-empty-level ?s - shaker ?l - level)
		(shaker-level ?s - shaker ?l - level)
		(unshaked ?s - shaker)
		(shaked ?s - shaker))		
  (:action grasp
             :parameters (?h - hand ?c - container)
             :precondition (and (handempty ?h) (ontable ?c))
             :effect (and (holding ?h ?c)
			  (not (handempty ?h))
	     	     	  (not (ontable ?c))))

  (:action leave
             :parameters (?h - hand ?c - container)
             :precondition (holding ?h ?c)
             :effect (and (ontable ?c)
	     	     	  (handempty ?h)
			  (not (holding ?h ?c))))
  (:action fill-shot
           :parameters (?h1 ?h2 - hand ?s - shot ?d - dispenser ?i - ingredient)
           :precondition (and (handempty ?h2)
			      (holding ?h1 ?s)
                              (empty ?s)
			      (clean ?s)
	   		      (dispenses ?d ?i))
           :effect (and (contains ?s ?i)
                        (not (empty ?s))
	   	   	(used ?s ?i)
			(not (clean ?s))))

  (:action refill-shot
           :parameters (?h1 ?h2 - hand ?s - shot ?d - dispenser ?i - ingredient)
           :precondition (and (handempty ?h2)
			      (holding ?h1 ?s)
                              (empty ?s)
			      (used ?s ?i)
	   		      (dispenses ?d ?i))
           :effect (and (contains ?s ?i)
                        (not (empty ?s))))

  (:action empty-shot
           :parameters (?h - hand ?p - shot ?b - beverage)
           :precondition (and (holding ?h ?p) (contains ?p ?b))
           :effect (and (empty ?p)
	   	   	(not (contains ?p ?b))))

  (:action clean-shot
  	   :parameters (?h1 ?h2 - hand ?s - shot ?b - beverage)
           :precondition (and (handempty ?h2)
			      (holding ?h1 ?s)
                              (empty ?s)
                              (used ?s ?b))
           :effect (and (clean ?s)
	   	   	(not (used ?s ?b))))  

  (:action pour-shot-to-clean-shaker
           :parameters (?h1 - hand ?s - shot ?d - shaker ?l ?l1 - level ?i - ingredient)
           :precondition (and (holding ?h1 ?s)
			      (contains ?s ?i)
                              (empty ?d)
	   		      (clean ?d)
                              (shaker-level ?d ?l)
                              (next ?l ?l1))
           :effect (and (empty ?s)
                        (not (contains ?s ?i))
			(contains ?d ?i)
                        (not (empty ?d))
			(not (clean ?d))
			(unshaked ?d)
			(shaker-level ?d ?l1)
			(not (shaker-level ?d ?l))))

  (:action pour-shot-to-used-shaker
           :parameters (?h1 - hand ?s - shot ?d - shaker ?l ?l1 - level ?i - ingredient)
           :precondition (and (holding ?h1 ?s)
			      (contains ?s ?i)
                              (unshaked ?d)
                              (shaker-level ?d ?l)
                              (next ?l ?l1))
           :effect (and (empty ?s)
                        (not (contains ?s ?i))
                        (contains ?d ?i)
			(shaker-level ?d ?l1)
  			(not (shaker-level ?d ?l))))

  (:action shake
  	   :parameters (?h1 ?h2 - hand ?s - shaker ?b - cocktail ?d1 ?d2 - ingredient)
           :precondition (and (handempty ?h2)
			      (holding ?h1 ?s)
			      (contains ?s ?d1)
                              (contains ?s ?d2)
			      (unshaked ?s)
                              (cocktail-part1 ?b ?d1)
			      (cocktail-part2 ?b ?d2))			      
           :effect (and (shaked ?s)
                        (contains ?s ?b)
		        (not (unshaked ?s))
                        (not (contains ?s ?d1))
                        (not (contains ?s ?d2))))

  (:action empty-shaker
           :parameters (?h - hand ?s - shaker ?b - cocktail ?l ?l1 - level)
           :precondition (and (holding ?h ?s)
			      (shaked ?s)
                              (contains ?s ?b)
			      (shaker-level ?s ?l)
			      (shaker-empty-level ?s ?l1))
           :effect (and (empty ?s)
			(not (contains ?s ?b))
	   	   	(not (shaked ?s))
	   	   	(shaker-level ?s ?l1)
			(not (shaker-level ?s ?l))))
  (:action clean-shaker
  	   :parameters (?h1 ?h2 - hand ?s - shaker)
           :precondition (and (handempty ?h2)
			      (holding ?h1 ?s)
                              (empty ?s))
           :effect (clean ?s))
  (:action pour-shaker-to-shot
           :parameters (?h - hand ?s - shaker ?d - shot ?l ?l1 - level ?b - beverage)
           :precondition (and (holding ?h ?s)
			      (shaked ?s)
                              (contains ?s ?b)
			      (empty ?d)
			      (clean ?d)
                              (shaker-level ?s ?l)
                              (next ?l1 ?l))
           :effect (and (contains ?d ?b)
	   	   	(not (empty ?d))
			(not (clean ?d))
			(shaker-level ?s ?l1)
			(not (shaker-level ?s ?l))))
 )
